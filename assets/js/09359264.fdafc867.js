"use strict";(self.webpackChunklhtp=self.webpackChunklhtp||[]).push([[4225],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),s=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),u=r,h=d["".concat(c,".").concat(u)]||d[u]||m[u]||o;return n?i.createElement(h,a(a({ref:t},p),{},{components:n})):i.createElement(h,a({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6247:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var i=n(7462),r=(n(7294),n(3905));const o={title:"9. \u270f\ufe0f PRACTICE: Command Line Git",id:"practice_command_line_git",slug:"practice_command_line_git",hide_table_of_contents:!0,sidebar_position:11,day:"monday",type:"exercise"},a=void 0,l={unversionedId:"git_html_and_css/practice_command_line_git",id:"git_html_and_css/practice_command_line_git",title:"9. \u270f\ufe0f PRACTICE: Command Line Git",description:"Goal:  Here at Epicodus, we use the command line, Git and Github on a daily basis. The goal for this exercise is to practice the workflow you'll use daily.",source:"@site/docs/1_git_html_and_css/1f_classwork_practice_command_line_git_and_github.md",sourceDirName:"1_git_html_and_css",slug:"/git_html_and_css/practice_command_line_git",permalink:"/lhtp/git_html_and_css/practice_command_line_git",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"9. \u270f\ufe0f PRACTICE: Command Line Git",id:"practice_command_line_git",slug:"practice_command_line_git",hide_table_of_contents:!0,sidebar_position:11,day:"monday",type:"exercise"},sidebar:"docs",previous:{title:"8. \u270f\ufe0f PRACTICE: GitHub Remote Repositories",permalink:"/lhtp/git_html_and_css/practice_github_remote_repositories"},next:{title:"10. \ud83d\udcd3 VS Code Workflow: Pair Programming In-Person or with Live Share",permalink:"/lhtp/git_html_and_css/vs_code_workflow_pair_programming_in_person_or_with_live_share"}},c={},s=[{value:"Warm Up",id:"warm-up",level:2},{value:"Code",id:"code",level:2},{value:"Goodbye World",id:"goodbye-world",level:3}],p={toc:s},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Goal"),":  Here at Epicodus, we use the command line, Git and Github on a daily basis. The goal for this exercise is to practice the workflow you'll use daily."),(0,r.kt)("h2",{id:"warm-up"},"Warm Up"),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Discuss the following with your partner:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"What are the steps to make a Git commit?"),(0,r.kt)("li",{parentName:"ul"},"What is the significance of the word 'main' in the command ",(0,r.kt)("inlineCode",{parentName:"li"},"$ git push al main"),"?"),(0,r.kt)("li",{parentName:"ul"},"What is the difference between the local ",(0,r.kt)("inlineCode",{parentName:"li"},".git")," repository, and the repository created on Github?"),(0,r.kt)("li",{parentName:"ul"},"How are the local ",(0,r.kt)("inlineCode",{parentName:"li"},".git")," repository, and the repository created on Github 'connected'?")),(0,r.kt)("h2",{id:"code"},"Code"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"goodbye-world"},"Goodbye World"),(0,r.kt)("p",null,'Begin practicing the command line, Git commands and GitHub set up by building a "Goodbye World" web page that you push to a repository on GitHub.  The steps you need to complete are below.  You will need to use the previous lessons as reference for the correct syntax and commands to complete them.'),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a new project directory in the Desktop directory called ",(0,r.kt)("inlineCode",{parentName:"li"},"goodbye"),"."),(0,r.kt)("li",{parentName:"ol"},"Initialize a Git repository to start tracking your changes."),(0,r.kt)("li",{parentName:"ol"},"Assign the pair initials who will be authoring the code.  (Skip this step if you are working solo.)"),(0,r.kt)("li",{parentName:"ol"},"Create an HTML file called ",(0,r.kt)("inlineCode",{parentName:"li"},"goodbye.html"),"."),(0,r.kt)("li",{parentName:"ol"},"Open your project directory in your text editor."),(0,r.kt)("li",{parentName:"ol"},"Add this HTML code to your ",(0,r.kt)("inlineCode",{parentName:"li"},"goodbye.html")," file:")),(0,r.kt)("div",{class:"filename"},"goodbye.html"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<h1> Goodbye </h1>\n<h2> A program to bid our friends farewell all over the world. </h2>\n\n<ul>\n  <li> English: Goodbye, friends! </li>\n  <li> Spanish:  Adios, amigos! </li>\n</ul>\n")),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},"Save the file and look at it in your browser."),(0,r.kt)("li",{parentName:"ol"},"Check the status of the changes that Git is watching."),(0,r.kt)("li",{parentName:"ol"},"Add the HTML file for tracking."),(0,r.kt)("li",{parentName:"ol"},"Commit your changes."),(0,r.kt)("li",{parentName:"ol"},"Add a few more lines of goodbyes to your HTML file (copy an existing line and write over the text leaving the ",(0,r.kt)("inlineCode",{parentName:"li"},"<li>")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"</li>")," at the beginning and end of the lines)."),(0,r.kt)("li",{parentName:"ol"},"Save the file and commit your changes."),(0,r.kt)("li",{parentName:"ol"},"Create a GitHub repository."),(0,r.kt)("li",{parentName:"ol"},"Push your changes to GitHub.")))}m.isMDXComponent=!0}}]);