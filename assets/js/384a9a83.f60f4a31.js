"use strict";(self.webpackChunklhtp=self.webpackChunklhtp||[]).push([[5317],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>g});var r=n(67294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var s=r.createContext({}),l=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},m=function(t){var e=l(t.components);return r.createElement(s.Provider,{value:e},t.children)},p="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,s=t.parentName,m=c(t,["components","mdxType","originalType","parentName"]),p=l(n),f=o,g=p["".concat(s,".").concat(f)]||p[f]||u[f]||i;return n?r.createElement(g,a(a({ref:e},m),{},{components:n})):r.createElement(g,a({ref:e},m))}));function g(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c[p]="string"==typeof t?t:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},20612:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const i={title:"2. Introduction to Functional Programming",id:"introduction_to_functional_programming",slug:"introduction_to_functional_programming",hide_table_of_contents:!0,sidebar_position:2,day:"weekend",type:"lesson",url:"https://github.com/epicodus-curriculum/react-full-stack/blob/main/2_functional-programming-with-javascript-1e75b6d0-055f-43e6-9f66-7a959ffc3f78/0b_introduction_to_functional_programming.md"},a=void 0,c={unversionedId:"react_part_time_evening/functional-programming-with-javascript-1e75b6d0-055f-43e6-9f66-7a959ffc3f78/introduction_to_functional_programming",id:"react_part_time_evening/functional-programming-with-javascript-1e75b6d0-055f-43e6-9f66-7a959ffc3f78/introduction_to_functional_programming",title:"2. Introduction to Functional Programming",description:"Up to this point, we have mostly focused on object-oriented programming. We've built objects that store information and have methods attached to them. Object-oriented programming relies on techniques like inheritance and encapsulation.",source:"@site/docs/react_part_time_evening/2_functional-programming-with-javascript-1e75b6d0-055f-43e6-9f66-7a959ffc3f78/0b_introduction_to_functional_programming.md",sourceDirName:"react_part_time_evening/2_functional-programming-with-javascript-1e75b6d0-055f-43e6-9f66-7a959ffc3f78",slug:"/react_part_time_evening/functional-programming-with-javascript-1e75b6d0-055f-43e6-9f66-7a959ffc3f78/introduction_to_functional_programming",permalink:"/lhtp/react_part_time_evening/functional-programming-with-javascript-1e75b6d0-055f-43e6-9f66-7a959ffc3f78/introduction_to_functional_programming",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"2. Introduction to Functional Programming",id:"introduction_to_functional_programming",slug:"introduction_to_functional_programming",hide_table_of_contents:!0,sidebar_position:2,day:"weekend",type:"lesson",url:"https://github.com/epicodus-curriculum/react-full-stack/blob/main/2_functional-programming-with-javascript-1e75b6d0-055f-43e6-9f66-7a959ffc3f78/0b_introduction_to_functional_programming.md"},sidebar:"react_part_time_evening",previous:{title:"1. Functional Programming with JavaScript Objectives",permalink:"/lhtp/react_part_time_evening/functional-programming-with-javascript-1e75b6d0-055f-43e6-9f66-7a959ffc3f78/functional_programming_with_javascript_objectives"},next:{title:"3. Testing Functional Code",permalink:"/lhtp/react_part_time_evening/functional-programming-with-javascript-1e75b6d0-055f-43e6-9f66-7a959ffc3f78/testing_functional_code"}},s={},l=[],m={toc:l},p="wrapper";function u(t){let{components:e,...n}=t;return(0,o.kt)(p,(0,r.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Up to this point, we have mostly focused on object-oriented programming. We've built objects that store information and have methods attached to them. Object-oriented programming relies on techniques like ",(0,o.kt)("strong",{parentName:"p"},"inheritance")," and ",(0,o.kt)("strong",{parentName:"p"},"encapsulation"),"."),(0,o.kt)("p",null,"Functional programming is a completely different paradigm. In general, the goal of a functional program is to be ",(0,o.kt)("strong",{parentName:"p"},"stateless"),", which means we can no longer store information in objects. Functional programming focuses on what objects ",(0,o.kt)("em",{parentName:"p"},"do"),", not on what they ",(0,o.kt)("em",{parentName:"p"},"are"),". Instead of storing information in objects, we will pass information between functions. We will no longer ",(0,o.kt)("strong",{parentName:"p"},"mutate")," state \u2014 that means we won't even reassign values to variables. In other words, no more ",(0,o.kt)("inlineCode",{parentName:"p"},"let"),", only ",(0,o.kt)("inlineCode",{parentName:"p"},"const"),"."),(0,o.kt)("p",null,"Object-oriented programming focuses on objects themselves while functional programming is focused on functions. We've used OOP in very concrete ways; for instance, a dog barks or a player stores a score."),(0,o.kt)("p",null,"In functional programming, our goal is to make our functions more abstract. This can make functional programming harder to grasp at first. However, once a function is abstracted, we can use it with many different objects. While OOP uses inheritance to give many kinds of objects functionality, functional programming uses a technique called ",(0,o.kt)("strong",{parentName:"p"},"composition"),". We will learn more about composition and how it works in a future lesson."),(0,o.kt)("p",null,"While we will focus on functional programming techniques during this course section, both object-oriented and functional programming have their advantages and disadvantages. A good coder will incorporate both paradigms, even in the same application."))}u.isMDXComponent=!0}}]);