"use strict";(self.webpackChunklhtp=self.webpackChunklhtp||[]).push([[38984],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>_});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,_=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(_,a(a({ref:t},c),{},{components:n})):r.createElement(_,a({ref:t},c))}));function _(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},41433:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(87462),i=(n(67294),n(3905));const o={title:"Lists and Redirects in a Controller",id:"lists_and_redirects_in_a_controller",slug:"lists_and_redirects_in_a_controller",hide_table_of_contents:!0,sidebar_position:26,day:"sunday",type:"lesson",url:"https://github.com/epicodus-curriculum/c-sharp-full-stack/blob/main/1e_lists_and_redirects_in_a_controller.md"},a=void 0,l={unversionedId:"c_and_net_part_time/basic-web-applications/lists_and_redirects_in_a_controller",id:"c_and_net_part_time/basic-web-applications/lists_and_redirects_in_a_controller",title:"Lists and Redirects in a Controller",description:"We can display a single item in our To Do List but that's not very helpful in itself. After all, this is a list of things to do, not a single item.",source:"@site/docs/c_and_net_part_time/8_basic-web-applications/1e_lists_and_redirects_in_a_controller.md",sourceDirName:"c_and_net_part_time/8_basic-web-applications",slug:"/c_and_net_part_time/basic-web-applications/lists_and_redirects_in_a_controller",permalink:"/c_and_net_part_time/basic-web-applications/lists_and_redirects_in_a_controller",draft:!1,tags:[],version:"current",sidebarPosition:26,frontMatter:{title:"Lists and Redirects in a Controller",id:"lists_and_redirects_in_a_controller",slug:"lists_and_redirects_in_a_controller",hide_table_of_contents:!0,sidebar_position:26,day:"sunday",type:"lesson",url:"https://github.com/epicodus-curriculum/c-sharp-full-stack/blob/main/1e_lists_and_redirects_in_a_controller.md"},sidebar:"c_and_net_part_time",previous:{title:"Request-Response Loop and HTTP Methods with ASP.NET Core MVC",permalink:"/c_and_net_part_time/basic-web-applications/request_response_loop_and_http_methods_with_aspnet_core_mvc"},next:{title:"Loops and Conditionals with Razor",permalink:"/c_and_net_part_time/basic-web-applications/loops_and_conditionals_with_razor"}},s={},p=[],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"We can display a single item in our To Do List but that's not very helpful in itself. After all, this is a ",(0,i.kt)("em",{parentName:"p"},"list")," of things to do, not a single item."),(0,i.kt)("p",null,"In this lesson, we'll update our controller to return a list of to dos. In the process, we'll also cover using redirects to DRY up our code. In the next lesson, we'll update our ",(0,i.kt)("inlineCode",{parentName:"p"},"index.cshtml")," view to display our list."),(0,i.kt)("p",null,"Let's change our controller code to pass in multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"Item"),"s to the view, not just a single ",(0,i.kt)("inlineCode",{parentName:"p"},"Item"),". Note that this will not compile until we update our views, in the next lesson:"),(0,i.kt)("div",{class:"filename"},"HomeController.cs"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'...\nusing System.Collections.Generic;\n\nnamespace ToDoList.Controllers\n{\n  public class HomeController : Controller\n  {\n\n    [HttpGet("/")]\n    public ActionResult Index()\n    {\n\n      List<Item> allItems = Item.GetAll();\n      return View(allItems);\n    }\n\n    ...\n\n    [HttpPost("/items")]\n    public ActionResult Create(string description)\n    {\n      Item myItem = new Item(description);\n      return RedirectToAction("Index");\n    }\n  }\n}\n')),(0,i.kt)("p",null,"First, we need to update our ",(0,i.kt)("inlineCode",{parentName:"p"},"Index()")," route method so that the route has access to all ",(0,i.kt)("inlineCode",{parentName:"p"},"Item"),"s. We'll use the static ",(0,i.kt)("inlineCode",{parentName:"p"},"GetAll()")," method to store a ",(0,i.kt)("inlineCode",{parentName:"p"},"List")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"Item"),"s in the variable ",(0,i.kt)("inlineCode",{parentName:"p"},"allItems"),". We then pass ",(0,i.kt)("inlineCode",{parentName:"p"},"allItems")," to the view."),(0,i.kt)("p",null,"Note that we also need to add ",(0,i.kt)("inlineCode",{parentName:"p"},"using System.Collections.Generic;")," to our file now that we've added a ",(0,i.kt)("inlineCode",{parentName:"p"},"List")," to our controller."),(0,i.kt)("p",null,"We also make an update to our ",(0,i.kt)("inlineCode",{parentName:"p"},"Create()")," route method as well. As we discussed in the last lesson, this route only needs to create a new ",(0,i.kt)("inlineCode",{parentName:"p"},"Item"),". It doesn't care about updating a view. While we could add ",(0,i.kt)("inlineCode",{parentName:"p"},"List<Item> allItems = Item.GetAll();")," to our ",(0,i.kt)("inlineCode",{parentName:"p"},"Create()")," method, it wouldn't be very DRY."),(0,i.kt)("p",null,"Instead, we can use a method called ",(0,i.kt)("inlineCode",{parentName:"p"},"RedirectToAction()")," to redirect to another route. ",(0,i.kt)("inlineCode",{parentName:"p"},"RedirectToAction()")," takes a route method as an argument. ",(0,i.kt)("inlineCode",{parentName:"p"},'RedirectToAction("Index");')," tells the server to invoke the ",(0,i.kt)("inlineCode",{parentName:"p"},"Index()")," route after the ",(0,i.kt)("inlineCode",{parentName:"p"},"Create()")," route has been invoked. This means we don't have to repeat the code in ",(0,i.kt)("inlineCode",{parentName:"p"},"Index()"),". We can just tell ",(0,i.kt)("inlineCode",{parentName:"p"},"Create()")," to redirect to ",(0,i.kt)("inlineCode",{parentName:"p"},"Index()")," instead."),(0,i.kt)("p",null,"In the next lesson, we'll update our view to display a ",(0,i.kt)("inlineCode",{parentName:"p"},"List")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"Item"),"s with loops and conditionals."))}u.isMDXComponent=!0}}]);