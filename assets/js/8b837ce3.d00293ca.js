"use strict";(self.webpackChunklhtp=self.webpackChunklhtp||[]).push([[7861],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=i.createContext({}),c=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},_="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),_=c(r),m=n,g=_["".concat(l,".").concat(m)]||_[m]||u[m]||o;return r?i.createElement(g,a(a({ref:t},p),{},{components:r})):i.createElement(g,a({ref:t},p))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[_]="string"==typeof e?e:n,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},91180:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var i=r(87462),n=(r(67294),r(3905));const o={title:"2. PRACTICE: Rewriting Git History with Rebase",id:"practice_rewriting_git_history_with_rebase",slug:"practice_rewriting_git_history_with_rebase",hide_table_of_contents:!0,sidebar_position:34,day:"wednesday",type:"exercise",url:"https://github.com/epicodus-classroom/test-intro-2/blob/main/3_new_arrays_and_looping/3b_classwork_practice_git_rebase.md"},a=void 0,s={unversionedId:"test_intro_2/new_arrays_and_looping/practice_rewriting_git_history_with_rebase",id:"test_intro_2/new_arrays_and_looping/practice_rewriting_git_history_with_rebase",title:"2. PRACTICE: Rewriting Git History with Rebase",description:"Goal:  Now that we've learned about how to change previous commits, let's put this new information into practice!",source:"@site/docs/test_intro_2/3_new_arrays_and_looping/3b_classwork_practice_git_rebase.md",sourceDirName:"test_intro_2/3_new_arrays_and_looping",slug:"/test_intro_2/new_arrays_and_looping/practice_rewriting_git_history_with_rebase",permalink:"/lhtp/test_intro_2/new_arrays_and_looping/practice_rewriting_git_history_with_rebase",draft:!1,tags:[],version:"current",sidebarPosition:34,frontMatter:{title:"2. PRACTICE: Rewriting Git History with Rebase",id:"practice_rewriting_git_history_with_rebase",slug:"practice_rewriting_git_history_with_rebase",hide_table_of_contents:!0,sidebar_position:34,day:"wednesday",type:"exercise",url:"https://github.com/epicodus-classroom/test-intro-2/blob/main/3_new_arrays_and_looping/3b_classwork_practice_git_rebase.md"},sidebar:"test_intro_2",previous:{title:"1. Rewriting Git History with Rebase",permalink:"/lhtp/test_intro_2/new_arrays_and_looping/rewriting_git_history_with_rebase"},next:{title:"3. Printing an Array to a Webpage",permalink:"/lhtp/test_intro_2/new_arrays_and_looping/printing_an_array_to_a_webpage"}},l={},c=[{value:"Warm Up",id:"warm-up",level:2},{value:"Code",id:"code",level:2},{value:"Rewriting Git History",id:"rewriting-git-history",level:3}],p={toc:c},_="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(_,(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Goal"),":  Now that we've learned about how to change previous commits, let's put this new information into practice!"),(0,n.kt)("h2",{id:"warm-up"},"Warm Up"),(0,n.kt)("hr",null),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"When can you use the ",(0,n.kt)("inlineCode",{parentName:"li"},"git commit --amend")," command to change a commit message?"),(0,n.kt)("li",{parentName:"ul"},"What are the two things that the ",(0,n.kt)("inlineCode",{parentName:"li"},"git rebase -i")," command can do?")),(0,n.kt)("h2",{id:"code"},"Code"),(0,n.kt)("hr",null),(0,n.kt)("p",null,"Complete the following exercise."),(0,n.kt)("h3",{id:"rewriting-git-history"},"Rewriting Git History"),(0,n.kt)("p",null,'Using the process outlined in the "Git: Rewriting History with Rebase" lesson, go back and alter two of the commits from a previous project: '),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Use the ",(0,n.kt)("inlineCode",{parentName:"li"},"--amend")," flag to change the most recent commit."),(0,n.kt)("li",{parentName:"ul"},"The rebase command to change any commit other than the most recent. Choose to either reword a commit message or squash and combine two commits. ")),(0,n.kt)("p",null,"Everyone in your pair or group should alter two commits."))}u.isMDXComponent=!0}}]);